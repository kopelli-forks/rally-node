"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

/**
 @module Ref

 This module contains utility methods for working with Rally Object References (refs)
 */
//                              oid |  -oid  |                                   uuid                                    |  uuid compact
var IDENTITY_REGEX_PARTIAL = '[0-9]+|-?[0-9]+|[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|[a-fA-F0-9]{32}';
var IDENTITY_REGEX = '(' + IDENTITY_REGEX_PARTIAL + ')';
var NON_CAP_IDENTITY_REGEX = '(?:' + IDENTITY_REGEX_PARTIAL + ')';
var TYPE_REGEX = '(\\w+)';
var DYNATYPE_REGEX = '(\\w{2,}\\/\\w+)';
var EXT_REGEX = '(?:\\.js\\??.*)';
var REF_REGEXES = [//dynatype collection ref (/portfolioitem/feature/1234/children)
new RegExp('.*?\\/' + DYNATYPE_REGEX + '\\/' + IDENTITY_REGEX + '\\/' + TYPE_REGEX + EXT_REGEX + '?$'), //dynatype ref (/portfolioitem/feature/1234)
new RegExp('.*?\\/' + DYNATYPE_REGEX + '\\/' + IDENTITY_REGEX + EXT_REGEX + '?$'), //collection ref (/defect/1234/tasks)
new RegExp('.*?\\/' + TYPE_REGEX + '\\/' + IDENTITY_REGEX + '\\/' + TYPE_REGEX + EXT_REGEX + '?$'), //basic ref (/defect/1234)
new RegExp('.*?\\/' + TYPE_REGEX + '\\/' + IDENTITY_REGEX + EXT_REGEX + '?$'), //permission ref (/workspacepermission/123u456w1)
new RegExp('.*?\\/' + TYPE_REGEX + '\\/(' + NON_CAP_IDENTITY_REGEX + 'u' + NON_CAP_IDENTITY_REGEX + '[pw]' + NON_CAP_IDENTITY_REGEX + ')' + EXT_REGEX + '?$')];

function match(input) {
  input = input && input._ref ? input._ref : input || '';

  var regexMatch = _lodash["default"].find(REF_REGEXES, function (regex) {
    return regex.test(input);
  });

  return regexMatch && input.match(regexMatch) || null;
}

var _default = {
  isRef: function isRef(input) {
    return Boolean(match(input));
  },
  getRelative: function getRelative(input) {
    var refMatch = match(input);
    return refMatch && [''].concat(refMatch.slice(1)).join('/') || null;
  },
  getType: function getType(input) {
    var refMatch = match(input);
    return refMatch && refMatch[1] || null;
  },
  getId: function getId(input) {
    var refMatch = match(input);
    return refMatch && refMatch[2] || null;
  }
};
exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3JlZi50cyJdLCJuYW1lcyI6WyJJREVOVElUWV9SRUdFWF9QQVJUSUFMIiwiSURFTlRJVFlfUkVHRVgiLCJOT05fQ0FQX0lERU5USVRZX1JFR0VYIiwiVFlQRV9SRUdFWCIsIkRZTkFUWVBFX1JFR0VYIiwiRVhUX1JFR0VYIiwiUkVGX1JFR0VYRVMiLCJSZWdFeHAiLCJtYXRjaCIsImlucHV0IiwiX3JlZiIsInJlZ2V4TWF0Y2giLCJfIiwiZmluZCIsInJlZ2V4IiwidGVzdCIsImlzUmVmIiwiQm9vbGVhbiIsImdldFJlbGF0aXZlIiwicmVmTWF0Y2giLCJjb25jYXQiLCJzbGljZSIsImpvaW4iLCJnZXRUeXBlIiwiZ2V0SWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7OztBQU1BO0FBQ0EsSUFBTUEsc0JBQXNCLEdBQUcsNkdBQS9CO0FBRUEsSUFBTUMsY0FBYyxHQUFHLE1BQU1ELHNCQUFOLEdBQStCLEdBQXREO0FBRUEsSUFBTUUsc0JBQXNCLEdBQUcsUUFBUUYsc0JBQVIsR0FBaUMsR0FBaEU7QUFFQSxJQUFNRyxVQUFVLEdBQUcsUUFBbkI7QUFFQSxJQUFNQyxjQUFjLEdBQUcsa0JBQXZCO0FBRUEsSUFBTUMsU0FBUyxHQUFHLGlCQUFsQjtBQUVBLElBQU1DLFdBQVcsR0FBRyxDQUVsQjtBQUNBLElBQUlDLE1BQUosQ0FBVyxXQUFXSCxjQUFYLEdBQTRCLEtBQTVCLEdBQW9DSCxjQUFwQyxHQUFxRCxLQUFyRCxHQUE2REUsVUFBN0QsR0FBMEVFLFNBQTFFLEdBQXNGLElBQWpHLENBSGtCLEVBS2xCO0FBQ0EsSUFBSUUsTUFBSixDQUFXLFdBQVdILGNBQVgsR0FBNEIsS0FBNUIsR0FBb0NILGNBQXBDLEdBQXFESSxTQUFyRCxHQUFpRSxJQUE1RSxDQU5rQixFQVFsQjtBQUNBLElBQUlFLE1BQUosQ0FBVyxXQUFXSixVQUFYLEdBQXdCLEtBQXhCLEdBQWdDRixjQUFoQyxHQUFpRCxLQUFqRCxHQUF5REUsVUFBekQsR0FBc0VFLFNBQXRFLEdBQWtGLElBQTdGLENBVGtCLEVBV2xCO0FBQ0EsSUFBSUUsTUFBSixDQUFXLFdBQVdKLFVBQVgsR0FBd0IsS0FBeEIsR0FBZ0NGLGNBQWhDLEdBQWlESSxTQUFqRCxHQUE2RCxJQUF4RSxDQVprQixFQWNsQjtBQUNBLElBQUlFLE1BQUosQ0FBVyxXQUFXSixVQUFYLEdBQXdCLE1BQXhCLEdBQWlDRCxzQkFBakMsR0FBMEQsR0FBMUQsR0FBZ0VBLHNCQUFoRSxHQUF5RixNQUF6RixHQUFrR0Esc0JBQWxHLEdBQTJILEdBQTNILEdBQWlJRyxTQUFqSSxHQUE2SSxJQUF4SixDQWZrQixDQUFwQjs7QUFrQkEsU0FBU0csS0FBVCxDQUFlQyxLQUFmLEVBQWdDO0FBQzlCQSxFQUFBQSxLQUFLLEdBQUlBLEtBQUssSUFBSUEsS0FBSyxDQUFDQyxJQUFoQixHQUF3QkQsS0FBSyxDQUFDQyxJQUE5QixHQUFzQ0QsS0FBSyxJQUFJLEVBQXZEOztBQUNBLE1BQU1FLFVBQVUsR0FBR0MsbUJBQUVDLElBQUYsQ0FBT1AsV0FBUCxFQUFvQixVQUFBUSxLQUFLO0FBQUEsV0FBSUEsS0FBSyxDQUFDQyxJQUFOLENBQVdOLEtBQVgsQ0FBSjtBQUFBLEdBQXpCLENBQW5COztBQUNBLFNBQVFFLFVBQVUsSUFBSUYsS0FBSyxDQUFDRCxLQUFOLENBQVlHLFVBQVosQ0FBZixJQUEyQyxJQUFsRDtBQUNEOztlQUVjO0FBQ2JLLEVBQUFBLEtBRGEsaUJBQ1BQLEtBRE8sRUFDSztBQUNoQixXQUFPUSxPQUFPLENBQUNULEtBQUssQ0FBQ0MsS0FBRCxDQUFOLENBQWQ7QUFDRCxHQUhZO0FBS2JTLEVBQUFBLFdBTGEsdUJBS0RULEtBTEMsRUFLVztBQUN0QixRQUFNVSxRQUFRLEdBQUdYLEtBQUssQ0FBQ0MsS0FBRCxDQUF0QjtBQUNBLFdBQVFVLFFBQVEsSUFBSSxDQUFDLEVBQUQsRUFBS0MsTUFBTCxDQUFZRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxDQUFmLENBQVosRUFBK0JDLElBQS9CLENBQW9DLEdBQXBDLENBQWIsSUFBMEQsSUFBakU7QUFDRCxHQVJZO0FBVWJDLEVBQUFBLE9BVmEsbUJBVUxkLEtBVkssRUFVTztBQUNsQixRQUFNVSxRQUFRLEdBQUdYLEtBQUssQ0FBQ0MsS0FBRCxDQUF0QjtBQUNBLFdBQVFVLFFBQVEsSUFBSUEsUUFBUSxDQUFDLENBQUQsQ0FBckIsSUFBNkIsSUFBcEM7QUFDRCxHQWJZO0FBZWJLLEVBQUFBLEtBZmEsaUJBZVBmLEtBZk8sRUFlSztBQUNoQixRQUFNVSxRQUFRLEdBQUdYLEtBQUssQ0FBQ0MsS0FBRCxDQUF0QjtBQUNBLFdBQVFVLFFBQVEsSUFBSUEsUUFBUSxDQUFDLENBQUQsQ0FBckIsSUFBNkIsSUFBcEM7QUFDRDtBQWxCWSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcclxuLyoqXHJcbiBAbW9kdWxlIFJlZlxyXG5cclxuIFRoaXMgbW9kdWxlIGNvbnRhaW5zIHV0aWxpdHkgbWV0aG9kcyBmb3Igd29ya2luZyB3aXRoIFJhbGx5IE9iamVjdCBSZWZlcmVuY2VzIChyZWZzKVxyXG4gKi9cclxuXHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2lkIHwgIC1vaWQgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV1aWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICB1dWlkIGNvbXBhY3RcclxuY29uc3QgSURFTlRJVFlfUkVHRVhfUEFSVElBTCA9ICdbMC05XSt8LT9bMC05XSt8W2EtZkEtRjAtOV17OH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17MTJ9fFthLWZBLUYwLTldezMyfSc7XHJcblxyXG5jb25zdCBJREVOVElUWV9SRUdFWCA9ICcoJyArIElERU5USVRZX1JFR0VYX1BBUlRJQUwgKyAnKSc7XHJcblxyXG5jb25zdCBOT05fQ0FQX0lERU5USVRZX1JFR0VYID0gJyg/OicgKyBJREVOVElUWV9SRUdFWF9QQVJUSUFMICsgJyknO1xyXG5cclxuY29uc3QgVFlQRV9SRUdFWCA9ICcoXFxcXHcrKSc7XHJcblxyXG5jb25zdCBEWU5BVFlQRV9SRUdFWCA9ICcoXFxcXHd7Mix9XFxcXC9cXFxcdyspJztcclxuXHJcbmNvbnN0IEVYVF9SRUdFWCA9ICcoPzpcXFxcLmpzXFxcXD8/LiopJztcclxuXHJcbmNvbnN0IFJFRl9SRUdFWEVTID0gW1xyXG5cclxuICAvL2R5bmF0eXBlIGNvbGxlY3Rpb24gcmVmICgvcG9ydGZvbGlvaXRlbS9mZWF0dXJlLzEyMzQvY2hpbGRyZW4pXHJcbiAgbmV3IFJlZ0V4cCgnLio/XFxcXC8nICsgRFlOQVRZUEVfUkVHRVggKyAnXFxcXC8nICsgSURFTlRJVFlfUkVHRVggKyAnXFxcXC8nICsgVFlQRV9SRUdFWCArIEVYVF9SRUdFWCArICc/JCcpLFxyXG5cclxuICAvL2R5bmF0eXBlIHJlZiAoL3BvcnRmb2xpb2l0ZW0vZmVhdHVyZS8xMjM0KVxyXG4gIG5ldyBSZWdFeHAoJy4qP1xcXFwvJyArIERZTkFUWVBFX1JFR0VYICsgJ1xcXFwvJyArIElERU5USVRZX1JFR0VYICsgRVhUX1JFR0VYICsgJz8kJyksXHJcblxyXG4gIC8vY29sbGVjdGlvbiByZWYgKC9kZWZlY3QvMTIzNC90YXNrcylcclxuICBuZXcgUmVnRXhwKCcuKj9cXFxcLycgKyBUWVBFX1JFR0VYICsgJ1xcXFwvJyArIElERU5USVRZX1JFR0VYICsgJ1xcXFwvJyArIFRZUEVfUkVHRVggKyBFWFRfUkVHRVggKyAnPyQnKSxcclxuXHJcbiAgLy9iYXNpYyByZWYgKC9kZWZlY3QvMTIzNClcclxuICBuZXcgUmVnRXhwKCcuKj9cXFxcLycgKyBUWVBFX1JFR0VYICsgJ1xcXFwvJyArIElERU5USVRZX1JFR0VYICsgRVhUX1JFR0VYICsgJz8kJyksXHJcblxyXG4gIC8vcGVybWlzc2lvbiByZWYgKC93b3Jrc3BhY2VwZXJtaXNzaW9uLzEyM3U0NTZ3MSlcclxuICBuZXcgUmVnRXhwKCcuKj9cXFxcLycgKyBUWVBFX1JFR0VYICsgJ1xcXFwvKCcgKyBOT05fQ0FQX0lERU5USVRZX1JFR0VYICsgJ3UnICsgTk9OX0NBUF9JREVOVElUWV9SRUdFWCArICdbcHddJyArIE5PTl9DQVBfSURFTlRJVFlfUkVHRVggKyAnKScgKyBFWFRfUkVHRVggKyAnPyQnKVxyXG5dO1xyXG5cclxuZnVuY3Rpb24gbWF0Y2goaW5wdXQ6IGFueSk6IGFueSB7XHJcbiAgaW5wdXQgPSAoaW5wdXQgJiYgaW5wdXQuX3JlZikgPyBpbnB1dC5fcmVmIDogKGlucHV0IHx8ICcnKTtcclxuICBjb25zdCByZWdleE1hdGNoID0gXy5maW5kKFJFRl9SRUdFWEVTLCByZWdleCA9PiByZWdleC50ZXN0KGlucHV0KSk7XHJcbiAgcmV0dXJuIChyZWdleE1hdGNoICYmIGlucHV0Lm1hdGNoKHJlZ2V4TWF0Y2gpKSB8fCBudWxsO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgaXNSZWYoaW5wdXQ6IGFueSkge1xyXG4gICAgcmV0dXJuIEJvb2xlYW4obWF0Y2goaW5wdXQpKTtcclxuICB9LFxyXG5cclxuICBnZXRSZWxhdGl2ZShpbnB1dDogYW55KSB7XHJcbiAgICBjb25zdCByZWZNYXRjaCA9IG1hdGNoKGlucHV0KTtcclxuICAgIHJldHVybiAocmVmTWF0Y2ggJiYgWycnXS5jb25jYXQocmVmTWF0Y2guc2xpY2UoMSkpLmpvaW4oJy8nKSkgfHwgbnVsbDtcclxuICB9LFxyXG5cclxuICBnZXRUeXBlKGlucHV0OiBhbnkpIHtcclxuICAgIGNvbnN0IHJlZk1hdGNoID0gbWF0Y2goaW5wdXQpO1xyXG4gICAgcmV0dXJuIChyZWZNYXRjaCAmJiByZWZNYXRjaFsxXSkgfHwgbnVsbDtcclxuICB9LFxyXG5cclxuICBnZXRJZChpbnB1dDogYW55KSB7XHJcbiAgICBjb25zdCByZWZNYXRjaCA9IG1hdGNoKGlucHV0KTtcclxuICAgIHJldHVybiAocmVmTWF0Y2ggJiYgcmVmTWF0Y2hbMl0pIHx8IG51bGw7XHJcbiAgfVxyXG59O1xyXG4iXX0=